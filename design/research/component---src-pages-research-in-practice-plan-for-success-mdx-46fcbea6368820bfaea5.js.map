{"version":3,"file":"component---src-pages-research-in-practice-plan-for-success-mdx-46fcbea6368820bfaea5.js","mappings":"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","sources":["webpack://idr-website-gatsby-theme/./src/pages/research-in-practice/plan-for-success.mdx","webpack://idr-website-gatsby-theme/./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack://idr-website-gatsby-theme/./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack://idr-website-gatsby-theme/./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.module.scss","webpack://idr-website-gatsby-theme/./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack://idr-website-gatsby-theme/./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack://idr-website-gatsby-theme/./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.module.scss","webpack://idr-website-gatsby-theme/./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack://idr-website-gatsby-theme/./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.module.scss","webpack://idr-website-gatsby-theme/./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack://idr-website-gatsby-theme/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/index.js","webpack://idr-website-gatsby-theme/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/LastModifiedDate.js","webpack://idr-website-gatsby-theme/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/last-modified-date.module.scss","webpack://idr-website-gatsby-theme/./node_modules/gatsby-theme-carbon/src/templates/Default.js"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/runner/work/idr/idr/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nimport pdf from \"../../images/pdf.svg\";\nimport doc from \"../../images/document.svg\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst Row = makeShortcode(\"Row\");\nconst Column = makeShortcode(\"Column\");\nconst ResourceCard = makeShortcode(\"ResourceCard\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <PageDescription mdxType=\"PageDescription\">\n      <p>{`A research plan is a document owned by the entire team that specifies what research will be conducted and how it will inform the team’s work. Limit a plan’s objectives to remove ambiguity and increase alignment. Research plans are not static, so remember to adjust as you learn.`}</p>\n    </PageDescription>\n    <h2>{`Creating your plan`}</h2>\n    <p>{`Start by defining your learning objectives, hypotheses, and assumptions as a team. Once your research plan is established, the Guide will create corresponding research protocols. A research protocol includes all of the steps needed to conduct the research activity. Protocols are specific to a single research activity, such as a contextual inquiry, a usability test, or a user interview.`}</p>\n    <h2>{`Set expectations`}</h2>\n    <p>{`Clearly describe how the research plan relates to both business and user outcomes. Your research plan should inform or validate your `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.ibm.com/design/thinking/page/framework/keys/hills\"\n      }}>{`Hills`}</a>{`. Rely on your Guide. Be explicit about what your team plans to learn or test. Always share your research plans and protocols across the larger team. This will help you gain alignment and drives action quicker.`}</p>\n    <p>{`This includes explaining in your research plan:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`learning objectives`}</li>\n      <li parentName=\"ul\">{`participants screening`}</li>\n      <li parentName=\"ul\">{`methodologies and techniques for data collection, synthesis, and analysis`}</li>\n      <li parentName=\"ul\">{`budget for conducting the research`}</li>\n      <li parentName=\"ul\">{`success metrics`}</li>\n      <li parentName=\"ul\">{`artifacts and deliverables`}</li>\n    </ul>\n    <h2>{`Get Started`}</h2>\n    <Row className=\"resource-card-group\" mdxType=\"Row\">\n      <Column colMd={4} colLg={4} noGutterSm mdxType=\"Column\">\n        <ResourceCard title=\"IBM Design research plan template\" aspectRatio=\"2:1\" actionIcon=\"download\" href=\"https://github.com/IBM-Design/idr/raw/master/static/ResearchPlan_v3.docx\" mdxType=\"ResourceCard\">\n        </ResourceCard>\n      </Column>\n      <Column colMd={4} colLg={4} noGutterSm mdxType=\"Column\">\n        <ResourceCard title=\"IBM Design Research protocol template\" aspectRatio=\"2:1\" actionIcon=\"launch\" href=\"https://github.com/IBM-Design/idr/raw/master/static/ResearchProtocol-v3.docx\" mdxType=\"ResourceCard\">\n        </ResourceCard>\n      </Column>\n    </Row>\n    <h2>{`Practice reflection`}</h2>\n    <p>{`Embrace critique from the larger design research community. Share your plans and deliverables to get feedback on your methodology choices, research insights, and planning process.`}</p>\n    <p>{`When collecting feedback, ask these types of questions:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Were the original research objectives clear?`}</li>\n      <li parentName=\"ul\">{`Did this research integrate with previously conducted research?`}</li>\n      <li parentName=\"ul\">{`How strong is the analysis?`}</li>\n      <li parentName=\"ul\">{`How actionable were the insights?`}</li>\n      <li parentName=\"ul\">{`What from the research was most memorable?`}</li>\n      <li parentName=\"ul\">{`What were the strengths and weaknesses of the research Playback?`}</li>\n    </ul>\n    <h2>{`Assess, revise, and plan next steps`}</h2>\n    <p>{`At the end of a research activity, compare your insights against your original objectives. How well do they align? How have you reduced your team’s questions and assumptions about your experience? Are the implications and path forward clear?`}</p>\n    <p>{`The challenge of conducting research in the enterprise setting is speed. You don’t have the luxury of months of ethnographic research. Aim to be nimble. Ask yourself as a team, “What can we build today? What can we do to advance our team’s understanding?”`}</p>\n    <h2>{`Where do you come in?`}</h2>\n    <p>{`Reflect together on what you’d like to learn.`}</p>\n    <h4>{`The Explorer:`}</h4>\n    <ul>\n      <li parentName=\"ul\">{`What can we build to test this assumption?`}</li>\n      <li parentName=\"ul\">{`How can I contribute to the research plan?`}</li>\n      <li parentName=\"ul\">{`What might I learn from this research?`}</li>\n    </ul>\n    <h4>{`The Guide:`}</h4>\n    <ul>\n      <li parentName=\"ul\">{`What hypotheses is the experience built on?`}</li>\n      <li parentName=\"ul\">{`How well did we answer the objectives?`}</li>\n      <li parentName=\"ul\">{`How fast is the team continually learning?`}</li>\n      <li parentName=\"ul\">{`How does our experience measure up against the competition?`}</li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport * as styles from './PageHeader.module.scss';\n\nconst PageHeader = ({ title, theme, tabs = [] }) => (\n  <div\n    className={cx(styles.pageHeader, {\n      [styles.withTabs]: tabs.length,\n      [styles.darkMode]: theme === 'dark',\n    })}>\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={styles.text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.node,\n};\n\nexport default PageHeader;\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"PageHeader-module--bx--text-truncate--end--b8JtW\";\nexport var bxTextTruncateFront = \"PageHeader-module--bx--text-truncate--front--WwZFh\";\nexport var pageHeader = \"PageHeader-module--page-header--NqfPe\";\nexport var darkMode = \"PageHeader-module--dark-mode--WCeH8\";\nexport var withTabs = \"PageHeader-module--with-tabs--vbQ-W\";\nexport var text = \"PageHeader-module--text--Er2EO\";","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n            branch\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory, branch } = repositoryProp || repository;\n\n  const href = `${baseUrl}/edit/${branch}${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n    branch: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"EditLink-module--bx--text-truncate--end--uI0cF\";\nexport var bxTextTruncateFront = \"EditLink-module--bx--text-truncate--front--HxjcS\";\nexport var link = \"EditLink-module--link--IDrl1\";\nexport var row = \"EditLink-module--row--BEmSX\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  render() {\n    const { title, tabs, slug } = this.props;\n    const currentTab = slug.split('/').filter(Boolean).slice(-1)[0];\n\n    const pageTabs = tabs.map((tab) => {\n      const slugifiedTab = slugify(tab, { lower: true, strict: true });\n      const selected = slugifiedTab === currentTab;\n      // matches with or without trailing slash: /?\n      // matches with or without hash link: (#.*)?\n      const currentTabRegex = new RegExp(`${currentTab}/?(#.*)?$`);\n      const href = slug.replace(currentTabRegex, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav aria-label={title}>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPageTabs.propTypes = {\n  tabs: PropTypes.array,\n  slug: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"PageTabs-module--bx--text-truncate--end--OC59x\";\nexport var bxTextTruncateFront = \"PageTabs-module--bx--text-truncate--front--5I6-L\";\nexport var tabsContainer = \"PageTabs-module--tabs-container--Cdfzw\";\nexport var list = \"PageTabs-module--list--xLqxG\";\nexport var listItem = \"PageTabs-module--list-item--024o6\";\nexport var link = \"PageTabs-module--link--Kz-7R\";\nexport var selectedItem = \"PageTabs-module--selected-item--aBB0K\";","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import LastModifiedDate from './LastModifiedDate';\n\nexport default LastModifiedDate;\n","import React from 'react';\nimport { Row, Column } from '../Grid';\nimport * as styles from './last-modified-date.module.scss';\n\nconst LastModifiedDate = ({ date }) => {\n  const options = {\n    day: '2-digit',\n    year: 'numeric',\n    month: 'long',\n  };\n\n  const lastModified = new Date(date);\n\n  return date ? (\n    <Row className={styles.row}>\n      <Column>\n        <div className={styles.text}>\n          Page last updated: {lastModified.toLocaleDateString('en-GB', options)}\n          {/* // https://www-03preprod.ibm.com/support/knowledgecenter/ibm_style/dates-and-times.html */}\n        </div>\n      </Column>\n    </Row>\n  ) : null;\n};\nexport default LastModifiedDate;\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"last-modified-date-module--bx--text-truncate--end--QgCc7\";\nexport var bxTextTruncateFront = \"last-modified-date-module--bx--text-truncate--front--kel8a\";\nexport var text = \"last-modified-date-module--text--ogPQF\";\nexport var row = \"last-modified-date-module--row--XJoYQ\";","import React from 'react';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Utils from '../components/Utils';\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\nimport useMetadata from '../util/hooks/useMetadata';\nimport LastModifiedDate from '../components/LastModifiedDate';\n\nconst Default = ({ pageContext, children, location, Title }) => {\n  const { frontmatter = {}, relativePagePath, titleType } = pageContext;\n  const {\n    tabs,\n    title,\n    theme: frontmatterTheme,\n    description,\n    keywords,\n    date,\n  } = frontmatter;\n\n  const { interiorTheme } = useMetadata();\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return (\n      slug.split('/').filter(Boolean).slice(-1)[0] ||\n      slugify(tabs[0], { lower: true })\n    );\n  };\n\n  const currentTab = getCurrentTab();\n\n  const theme = frontmatterTheme || interiorTheme;\n\n  return (\n    <Layout\n      tabs={tabs}\n      homepage={false}\n      theme={theme}\n      pageTitle={title}\n      pageDescription={description}\n      pageKeywords={keywords}\n      titleType={titleType}>\n      <PageHeader\n        title={Title ? <Title /> : title}\n        label=\"label\"\n        tabs={tabs}\n        theme={theme}\n      />\n      {tabs && (\n        <PageTabs\n          title={title}\n          slug={slug}\n          tabs={tabs}\n          currentTab={currentTab}\n        />\n      )}\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n        <LastModifiedDate date={date} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <Utils />\n    </Layout>\n  );\n};\n\nexport default Default;\n"],"names":["_frontmatter","makeShortcode","name","props","console","warn","PageDescription","Row","Column","ResourceCard","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","className","colMd","colLg","noGutterSm","title","aspectRatio","actionIcon","href","isMDXComponent","theme","tabs","cx","length","id","relativePagePath","repositoryProp","repository","useStaticQuery","site","siteMetadata","baseUrl","subDirectory","branch","PageTabs","render","this","slug","currentTab","split","filter","Boolean","slice","pageTabs","map","tab","slugifiedTab","slugify","lower","strict","selected","currentTabRegex","RegExp","replace","key","Link","to","React","date","lastModified","Date","toLocaleDateString","day","year","month","pageContext","children","location","Title","frontmatter","titleType","frontmatterTheme","description","keywords","interiorTheme","useMetadata","pathPrefix","pathname","Layout","homepage","pageTitle","pageDescription","pageKeywords","label","Main","padded","NextPrevious","Utils"],"sourceRoot":""}