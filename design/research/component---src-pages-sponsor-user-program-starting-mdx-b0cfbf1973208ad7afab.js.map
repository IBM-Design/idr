{"version":3,"file":"component---src-pages-sponsor-user-program-starting-mdx-b0cfbf1973208ad7afab.js","mappings":"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","sources":["webpack://idr-website-gatsby-theme/./src/pages/sponsor-user-program/starting.mdx","webpack://idr-website-gatsby-theme/./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack://idr-website-gatsby-theme/./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack://idr-website-gatsby-theme/./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.module.scss","webpack://idr-website-gatsby-theme/./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack://idr-website-gatsby-theme/./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack://idr-website-gatsby-theme/./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.module.scss","webpack://idr-website-gatsby-theme/./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack://idr-website-gatsby-theme/./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.module.scss","webpack://idr-website-gatsby-theme/./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack://idr-website-gatsby-theme/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/index.js","webpack://idr-website-gatsby-theme/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/LastModifiedDate.js","webpack://idr-website-gatsby-theme/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/last-modified-date.module.scss","webpack://idr-website-gatsby-theme/./node_modules/gatsby-theme-carbon/src/templates/Default.js"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/runner/work/idr/idr/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst Row = makeShortcode(\"Row\");\nconst Column = makeShortcode(\"Column\");\nconst Accordion = makeShortcode(\"Accordion\");\nconst AccordionItem = makeShortcode(\"AccordionItem\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <PageDescription mdxType=\"PageDescription\">\n      <p>{`Now that your plan is complete, the team is aligned on goals, and roles have been determined, it’s time to start your program. Below is a checklist to get you started:`}</p>\n    </PageDescription>\n    <Row className=\"bullets\" mdxType=\"Row\">\n      <Column colMd={7} colLg={7} mdxType=\"Column\">\n        <ul>\n          <li parentName=\"ul\">{`Recruit Sponsor Users. Not sure where to start? See the Pro Tips and FAQs for more detailed guidance.`}</li>\n          <li parentName=\"ul\">{`Set expectations with potential Sponsor Users. Common activities may include Enterprise Design Thinking workshops, sneak peeks into our latest offerings, participatory design sessions, surveys, usability testing, contextual inquiries, and interviews. Time commitments can vary from 1-2 hours per quarter up to 5 hours per week. A good average is 60-90 min every couple of weeks.`}</li>\n          <li parentName=\"ul\">{`Have users opt in to the program. Their consent to participate should be formalized via a feedback agreement. It’s okay to brief them on the program and benefits, but users are required to sign an agreement before confidential information is shared.`}</li>\n          <li parentName=\"ul\">{`All agreements should be tracked so other teams can see who is actively participating in your program.`}</li>\n          <li parentName=\"ul\">{`Hold a kick-off meeting with each user to ensure everyone is on aligned on program expectations, including goals, activities, and timeframe.`}</li>\n        </ul>\n      </Column>\n    </Row>\n    <h2>{`Pro Tips`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`When recruiting Sponsor Users, provide clients with program details and requirements to gauge their interest and availability.`}</li>\n      <li parentName=\"ul\">{`Ask Sales, Service, and Business Partners if you can “listen in” on their conversations with clients or join site visits.`}</li>\n      <li parentName=\"ul\">{`Keep a pipeline of Sponsor Users so you can collect a healthy mix of feedback for your offering.`}</li>\n    </ul>\n    <h2>{`FAQs`}</h2>\n    <Accordion mdxType=\"Accordion\">\n  <AccordionItem className=\"bx--type-body-long-02\" title=\"How do I get Sponsor Users?\" mdxType=\"AccordionItem\">\n    There are a variety of ways to recruit Sponsor Users, ranging from\n    recruiting through conferences or events to working with members of\n    your broader product team. Most often, different members of your team may\n    already have established relationships with users and clients. Communicating and\n    building a relationship with these team members who have access to clients\n    can help you recruit Sponsor Users.\n  </AccordionItem>\n  <AccordionItem className=\"bx--type-body-long-02\" title=\"Whose responsibility is it to identify and sign up new Sponsor Users?\" mdxType=\"AccordionItem\">\n    There is no ‘one size fits all’ answer. Some business units have Sponsor User program managers. Other teams\n    rely heavily on their product managers, research guides, or account teams. The most important thing is\n    that your team identifies a person who has the bandwidth, access, and can be\n    held accountable.\n  </AccordionItem>\n  <AccordionItem className=\"bx--type-body-long-02\" title=\"Is there anyone with whom we cannot engage?\" mdxType=\"AccordionItem\">\n    There is a small number of clients on IBM's denied parties list (DPL) with whom employees cannot\n    engage. If you are not an IBM employee, check with your legal or agreements team to inquire about specific restrictions your company may have.\n  </AccordionItem>\n  <AccordionItem className=\"bx--type-body-long-02\" title=\"Who is covered by an agreement once signed?\" mdxType=\"AccordionItem\">\n    At IBM, once the client signs the agreement, it covers any user participant employed\n    by that company. In most instances, you do not need individually-signed agreements for each user\n    participant. There are some countries that require individual consent in addition to a larger, company-wide agreement. If you are not an IBM employee, check with your legal or agreements team to inquire about specific agreement requirements and guidelines.\n  </AccordionItem>\n    </Accordion>\n    {\n      /* ## Learn more\n      <Row className=\"resource-card-group\">\n      <Column colMd={4} colLg={4} noGutterSm>\n      <ResourceCard\n       title=\"IBM Sponsor User Program Internal Deck\"\n       aspectRatio=\"2:1\"\n       actionIcon=\"launch\"\n       href=\"#\"\n      >\n      </ResourceCard>\n      </Column>\n      <Column colMd={4} colLg={4} noGutterSm>\n      <ResourceCard\n       title=\"IBM Sponsor User Program External Deck\"\n       aspectRatio=\"2:1\"\n       actionIcon=\"launch\"\n       href=\"#\"\n      >\n      </ResourceCard>\n      </Column>\n      <Column colMd={4} colLg={4} noGutterSm>\n      <ResourceCard\n       title=\"IBM Sponsor User Program Flyer\"\n       aspectRatio=\"2:1\"\n       actionIcon=\"launch\"\n       href=\"#\"\n      >\n      </ResourceCard>\n      </Column>\n      </Row> */\n    }\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport * as styles from './PageHeader.module.scss';\n\nconst PageHeader = ({ title, theme, tabs = [] }) => (\n  <div\n    className={cx(styles.pageHeader, {\n      [styles.withTabs]: tabs.length,\n      [styles.darkMode]: theme === 'dark',\n    })}>\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={styles.text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.node,\n};\n\nexport default PageHeader;\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"PageHeader-module--bx--text-truncate--end--b8JtW\";\nexport var bxTextTruncateFront = \"PageHeader-module--bx--text-truncate--front--WwZFh\";\nexport var pageHeader = \"PageHeader-module--page-header--NqfPe\";\nexport var darkMode = \"PageHeader-module--dark-mode--WCeH8\";\nexport var withTabs = \"PageHeader-module--with-tabs--vbQ-W\";\nexport var text = \"PageHeader-module--text--Er2EO\";","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n            branch\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory, branch } = repositoryProp || repository;\n\n  const href = `${baseUrl}/edit/${branch}${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n    branch: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"EditLink-module--bx--text-truncate--end--uI0cF\";\nexport var bxTextTruncateFront = \"EditLink-module--bx--text-truncate--front--HxjcS\";\nexport var link = \"EditLink-module--link--IDrl1\";\nexport var row = \"EditLink-module--row--BEmSX\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  render() {\n    const { title, tabs, slug } = this.props;\n    const currentTab = slug.split('/').filter(Boolean).slice(-1)[0];\n\n    const pageTabs = tabs.map((tab) => {\n      const slugifiedTab = slugify(tab, { lower: true, strict: true });\n      const selected = slugifiedTab === currentTab;\n      // matches with or without trailing slash: /?\n      // matches with or without hash link: (#.*)?\n      const currentTabRegex = new RegExp(`${currentTab}/?(#.*)?$`);\n      const href = slug.replace(currentTabRegex, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav aria-label={title}>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPageTabs.propTypes = {\n  tabs: PropTypes.array,\n  slug: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"PageTabs-module--bx--text-truncate--end--OC59x\";\nexport var bxTextTruncateFront = \"PageTabs-module--bx--text-truncate--front--5I6-L\";\nexport var tabsContainer = \"PageTabs-module--tabs-container--Cdfzw\";\nexport var list = \"PageTabs-module--list--xLqxG\";\nexport var listItem = \"PageTabs-module--list-item--024o6\";\nexport var link = \"PageTabs-module--link--Kz-7R\";\nexport var selectedItem = \"PageTabs-module--selected-item--aBB0K\";","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import LastModifiedDate from './LastModifiedDate';\n\nexport default LastModifiedDate;\n","import React from 'react';\nimport { Row, Column } from '../Grid';\nimport * as styles from './last-modified-date.module.scss';\n\nconst LastModifiedDate = ({ date }) => {\n  const options = {\n    day: '2-digit',\n    year: 'numeric',\n    month: 'long',\n  };\n\n  const lastModified = new Date(date);\n\n  return date ? (\n    <Row className={styles.row}>\n      <Column>\n        <div className={styles.text}>\n          Page last updated: {lastModified.toLocaleDateString('en-GB', options)}\n          {/* // https://www-03preprod.ibm.com/support/knowledgecenter/ibm_style/dates-and-times.html */}\n        </div>\n      </Column>\n    </Row>\n  ) : null;\n};\nexport default LastModifiedDate;\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"last-modified-date-module--bx--text-truncate--end--QgCc7\";\nexport var bxTextTruncateFront = \"last-modified-date-module--bx--text-truncate--front--kel8a\";\nexport var text = \"last-modified-date-module--text--ogPQF\";\nexport var row = \"last-modified-date-module--row--XJoYQ\";","import React from 'react';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Utils from '../components/Utils';\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\nimport useMetadata from '../util/hooks/useMetadata';\nimport LastModifiedDate from '../components/LastModifiedDate';\n\nconst Default = ({ pageContext, children, location, Title }) => {\n  const { frontmatter = {}, relativePagePath, titleType } = pageContext;\n  const {\n    tabs,\n    title,\n    theme: frontmatterTheme,\n    description,\n    keywords,\n    date,\n  } = frontmatter;\n\n  const { interiorTheme } = useMetadata();\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return (\n      slug.split('/').filter(Boolean).slice(-1)[0] ||\n      slugify(tabs[0], { lower: true })\n    );\n  };\n\n  const currentTab = getCurrentTab();\n\n  const theme = frontmatterTheme || interiorTheme;\n\n  return (\n    <Layout\n      tabs={tabs}\n      homepage={false}\n      theme={theme}\n      pageTitle={title}\n      pageDescription={description}\n      pageKeywords={keywords}\n      titleType={titleType}>\n      <PageHeader\n        title={Title ? <Title /> : title}\n        label=\"label\"\n        tabs={tabs}\n        theme={theme}\n      />\n      {tabs && (\n        <PageTabs\n          title={title}\n          slug={slug}\n          tabs={tabs}\n          currentTab={currentTab}\n        />\n      )}\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n        <LastModifiedDate date={date} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <Utils />\n    </Layout>\n  );\n};\n\nexport default Default;\n"],"names":["_frontmatter","makeShortcode","name","props","console","warn","PageDescription","Row","Column","Accordion","AccordionItem","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","className","colMd","colLg","parentName","title","isMDXComponent","theme","tabs","cx","length","id","relativePagePath","repositoryProp","repository","useStaticQuery","site","siteMetadata","baseUrl","subDirectory","href","branch","PageTabs","render","this","slug","currentTab","split","filter","Boolean","slice","pageTabs","map","tab","slugifiedTab","slugify","lower","strict","selected","currentTabRegex","RegExp","replace","key","Link","to","React","date","lastModified","Date","toLocaleDateString","day","year","month","pageContext","children","location","Title","frontmatter","titleType","frontmatterTheme","description","keywords","interiorTheme","useMetadata","pathPrefix","pathname","Layout","homepage","pageTitle","pageDescription","pageKeywords","label","Main","padded","NextPrevious","Utils"],"sourceRoot":""}